ws	{delim}+
letter	[A-Za-z]
digit	[0-9]
id	{letter}({letter}|{digit})*
number	{digit}+(.{digit}+)?(E([+-])?{digit}+)?
punctuation	\(|\)|\{|\}|\[|\]|\.|\,|\:|\;
compareop	<|>|<=|>=|<>|==
basicop	\+|\-|\*|\/
sumop	{basicop}+=
incrementop	\+\+|\-\-
logicop	\|\||!|&&|\||&|\^
scopeop	\:\:
operator	<<|>>
op	{punctuation}|{basicop}|{compareop}|{sumop}|{incrementop}|{logicop}|{operator}
type	int|double|float
ioclass	cout|cin
$$
{ws}	DEFAULT
NULL	null
,	split
;	delimiter
{head}	include_head
int main\(\)	start
for	for
endl	iostring
if	IF
else	ELSE
std	StandardScope
{ioclass}	ioclass
\{	{
\}	}
\(	(
\)	)
{scopeop}	scope_op
{punctuation}	punctuation
{compareop}	compare_op
{sumop}	sum_op
{incrementop}	increment_op
{logicop}	logic_op
{operator}	io_op
\-|\+	plus_minus
[*/]	muti_divide
\=	=
{type}	type
{id}	var
{number}	num
